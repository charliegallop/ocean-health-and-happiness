library(tidyverse)
library('magrittr')
library('sjPlot')
library('sjmisc')
library('sjstats')
library('arm')
install.packages(tidyverse)
install.packages('tidyverse')
install.packages("tidyverse")
df <- read_csv(path = "/home/charlie/Documents/Uni/Exeter - Data Science/MTHM601_Fundamentals_of_Applied_Data_Science/assignmentProjectv2/data/cleanData/finalTable.csv")
df.head()
df <- read_csv(path = "/home/charlie/Documents/Uni/Exeter - Data Science/MTHM601_Fundamentals_of_Applied_Data_Science/assignmentProjectv2/data/cleanData/finalTable.csv")
library('readr')
df <- read_csv(path = "/home/charlie/Documents/Uni/Exeter - Data Science/MTHM601_Fundamentals_of_Applied_Data_Science/assignmentProjectv2/data/cleanData/finalTable.csv")
df <- read_csv("/home/charlie/Documents/Uni/Exeter - Data Science/MTHM601_Fundamentals_of_Applied_Data_Science/assignmentProjectv2/data/cleanData/finalTable.csv")
View(df)
View(df)
df.head()
df.head
glimpse(df)
library('tidyverse')
library(tidyverse)
install.packages(tidyverse)
install.packages('tidyverse')
df <- read_csv("/home/charlie/Documents/Uni/Exeter - Data Science/MTHM601_Fundamentals_of_Applied_Data_Science/assignmentProjectv2/data/cleanData/finalTable.csv")
lm1 <- lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + coastalProt, data = df)
lm1.summary()
lm1.summary
summary(ml1)
summary(lm1)
lm1 <- lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec, data = df)
summary(lm1)
lmer1 <- lmer(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + (1|region), data = df)
library(lme4)
library(lmerTest)
library(tidyverse)
df <- read_csv("/home/charlie/Documents/Uni/Exeter - Data Science/MTHM601_Fundamentals_of_Applied_Data_Science/assignmentProjectv2/data/cleanData/finalTable.csv")
lm1 <- lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec, data = df)
lmer1 <- lmer(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + (1|region), data = df)
summary(lmer1)
lm1 %>% se.coef() %>% round(5)
library(lme4)
library(lmerTest)
library(tidyverse)
library(magrittr)
library(sjPlot)
library(sjmisc)
library(sjstats)
library(arm)
library(readr)
lm1 %>% se.coef() %>% round(5)
lmer1 %>% se.coef() %>% extract2(1) %>% round(5)
icc(lmer1)
performance::icc(lmer1)
lmer1vc <- VarCorr(lmer1)
print(lmer1vc, comp = "Variance")
performance::icc(lmer1)
ggplot(data = lmerdiag, aes(x = Fitted, y = Residuals, col = region)) +
geom_point() +
facet_wrap(~region) +
ggtitle("Lowest level residuals facetting by region")
lmerdiag <- data.frame(Residuals = resid(lmer1),
region = df$region,
Fitted = fitted(lmer1))
ggplot(data = lmerdiag, aes(x = Fitted, y = Residuals, col = region)) +
geom_point() +
facet_wrap(~region) +
ggtitle("Lowest level residuals facetting by region")
plot_model(lmer1, type = "re")
install.packages('glmmTMB')
library(lme4)
library(lmerTest)
library(tidyverse)
library(magrittr)
library(sjPlot)
library(sjmisc)
library(sjstats)
library(arm)
library(readr)
lm1 <- lm(happinessScore ~ senseOfPlace, data = df)#lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec, data = df)
lmer1 <- lm(happinessScore ~ senseOfPlace + (1|region), data = df#lmer(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + (1|region), data = df)
lm1 <- lm(happinessScore ~ senseOfPlace, data = df)#lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec, data = df)
lm1 <- lm(happinessScore ~ senseOfPlace, data = df)#lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec, data = df)
plot(m1)
plot(lm1)
lm1 <- lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec, data = df)
plot(lm1)#
plot(lm1)#
summary(lm1)
plot(senseOfPlace, happinessScore, data = df)
plot(df$senseOfPlace, df$happinessScore)
]
plot(df$senseOfPlace, df$happinessScore, color = df$region)
plot(df$senseOfPlace, df$happinessScore, group = df$region)
df %>% ggplot() + geom_point(aes(x = senseOfPlace, y = happinessScore, color = region))
df %>% ggplot() + geom_point(aes(x = log(senseOfPlace), y = happinessScore, color = region))
df %>% ggplot() + geom_point(aes(x = log(senseOfPlace), y = log(happinessScore), color = region))
df %>% ggplot() + geom_point(aes(x = ln(senseOfPlace), y = ln(happinessScore), color = region))
df %>% ggplot() + geom_point(aes(x = log(senseOfPlace), y = log(happinessScore), color = region))
df %>% ggplot() + geom_point(aes(x = log(senseOfPlace), y = log(happinessScore), color = region)) + facet_wrap(vars(region))
df %>% ggplot() + geom_point(aes(x = log(senseOfPlace), y = happinessScore, color = region)) + facet_wrap(vars(region))
df %>% ggplot() + geom_point(aes(x = senseOfPlace, y = happinessScore, color = region)) + facet_wrap(vars(region))
df %>% ggplot() + geom_point(aes(x = senseOfPlace, y = happinessScore, color = region)) + facet_wrap(vars(region)) + scale_x_continuous(trans='log10')
df %>% ggplot() + geom_point(aes(x = senseOfPlace, y = happinessScore, color = region)) + facet_wrap(vars(region)) + scale_x_continuous(trans='log10')
hist(df$senseOfPlace)
df %>% ggplot() + geom_point(aes(x = -senseOfPlace, y = happinessScore, color = region)) + facet_wrap(vars(region)) + scale_x_continuous(trans='log10')
df$senseOfPlace = -df$senseOfPlace
View(df)
View(df)
df %>% ggplot() + geom_point(aes(x = senseOfPlace, y = happinessScore, color = region)) + facet_wrap(vars(region)) + scale_x_continuous(trans='log10')
df <- read_csv("/home/charlie/Documents/Uni/Exeter - Data Science/MTHM601_Fundamentals_of_Applied_Data_Science/assignmentProjectv2/data/cleanData/finalTable.csv")
max(df$senseOfPlace)
k <- max(df$senseOfPlace)
k
df$senseOfPlaceTrans <- SQRT(k - df$senseOfPlace)
df$senseOfPlaceTrans <- sqrt(k - df$senseOfPlace)
View(df)
View(df)
df %>% ggplot() + geom_point(aes(x = senseOfPlaceTrans, y = happinessScore, color = region)) + facet_wrap(vars(region)) + scale_x_continuous(trans='log10')
df %>% ggplot() + geom_point(aes(x = senseOfPlaceTrans, y = happinessScore, color = region)) + facet_wrap(vars(region))
hist(df$senseOfPlace)
hist(df$senseOfPlaceTrans)
hist(df$senseOfPlace)
hist(df$senseOfPlaceTrans)
hist(df$senseOfPlace)
lm1 <- lm(happinessScore ~ senseOfPlaceTrans, data = df) #+ cleanWater + tourismAndRec, data = df)
summary(lm1)
lm1 <- lm(happinessScore ~ senseOfPlace, data = df) #+ cleanWater + tourismAndRec, data = df)
summary(lm1)
plot(lm1$residuals)
hist(lm1$residuals)
hist(lmer1$residuals)
View(lmer1)
lm1.resid
lm2 <- lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + artisnalOpp + biodiversity + foodProv + natProducts, data = df)
summary(lm2)
lmer1 <- lmer(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + (1|region), data = df)
lmer2 <- lmerlm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + artisnalOpp + biodiversity + foodProv + natProducts + (1|region), data = df)
lmer2 <- lmer(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + artisnalOpp + biodiversity + foodProv + natProducts + (1|region), data = df)
plot(lm2.resid)
plot(lm2)
par(mfrow = 2)
par(mfrow = c(2, 2))
plot(lm2)
install.packages(grid)
install.packages('grid'')
install.packages('grid)
install.packages('grid')
install.packages("grid")
install.packages("grid")
install.packages("grid")
install.packages("grid")
install.packages("grid")
install.packages("gridExtra")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, fig.cap = TRUE)
library(ggplot2)
library(lme4)
library(lmerTest)
library(tidyverse)
library(magrittr)
library(sjPlot)
library(sjmisc)
library(sjstats)
library(arm)
library(readr)
df <- read_csv("/home/charlie/Documents/Uni/Exeter - Data Science/MTHM601_Fundamentals_of_Applied_Data_Science/assignmentProjectv2/data/cleanData/finalTable.csv")
colours <- list(graphcol = '#315659',
linecol =   '#253132',
altlinecol = '#9B2915')
require(ggplot2)
diagPlot<-function(model, lineCol, graphCol){
p1<-ggplot(model, aes(.fitted, .resid))+geom_point(col = graphCol)
p1<-p1+stat_smooth(method="loess")+geom_hline(yintercept=0, col=lineCol, linetype="dashed")
p1<-p1+xlab("Fitted values")+ylab("Residuals")
p1<-p1+ggtitle("Residual vs Fitted Plot")+theme_bw()
p2<-ggplot(model, aes(qqnorm(.stdresid)[[1]], .stdresid))+geom_point(na.rm = TRUE)
p2<-p2+geom_abline(aes(qqline(.stdresid)))+xlab("Theoretical Quantiles")+ylab("Standardized Residuals")
p2<-p2+ggtitle("Normal Q-Q")+theme_bw()
p3<-ggplot(model, aes(.fitted, sqrt(abs(.stdresid))))+geom_point(na.rm=TRUE)
p3<-p3+stat_smooth(method="loess", na.rm = TRUE)+xlab("Fitted Value")
p3<-p3+ylab(expression(sqrt("|Standardized residuals|")))
p3<-p3+ggtitle("Scale-Location")+theme_bw()
p4<-ggplot(model, aes(seq_along(.cooksd), .cooksd))+geom_bar(stat="identity", position="identity")
p4<-p4+xlab("Obs. Number")+ylab("Cook's distance")
p4<-p4+ggtitle("Cook's distance")+theme_bw()
p5<-ggplot(model, aes(.hat, .stdresid))+geom_point(aes(size=.cooksd), na.rm=TRUE)
p5<-p5+stat_smooth(method="loess", na.rm=TRUE)
p5<-p5+xlab("Leverage")+ylab("Standardized Residuals")
p5<-p5+ggtitle("Residual vs Leverage Plot")
p5<-p5+scale_size_continuous("Cook's Distance", range=c(1,5))
p5<-p5+theme_bw()+theme(legend.position="bottom")
p6<-ggplot(model, aes(.hat, .cooksd))+geom_point(na.rm=TRUE)+stat_smooth(method="loess", na.rm=TRUE)
p6<-p6+xlab("Leverage hii")+ylab("Cook's Distance")
p6<-p6+ggtitle("Cook's dist vs Leverage hii/(1-hii)")
p6<-p6+geom_abline(slope=seq(0,3,0.5), color="gray", linetype="dashed")
p6<-p6+theme_bw()
return(list(rvfPlot=p1, qqPlot=p2, sclLocPlot=p3, cdPlot=p4, rvlevPlot=p5, cvlPlot=p6))
}
diagPlts<-diagPlot(lm3)
lm3 <- lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + artisnalOpp + biodiversity + foodProv + natProducts, data = df)
require(ggplot2)
diagPlot<-function(model, lineCol, graphCol){
p1<-ggplot(model, aes(.fitted, .resid))+geom_point(col = graphCol)
p1<-p1+stat_smooth(method="loess")+geom_hline(yintercept=0, col=lineCol, linetype="dashed")
p1<-p1+xlab("Fitted values")+ylab("Residuals")
p1<-p1+ggtitle("Residual vs Fitted Plot")+theme_bw()
p2<-ggplot(model, aes(qqnorm(.stdresid)[[1]], .stdresid))+geom_point(na.rm = TRUE)
p2<-p2+geom_abline(aes(qqline(.stdresid)))+xlab("Theoretical Quantiles")+ylab("Standardized Residuals")
p2<-p2+ggtitle("Normal Q-Q")+theme_bw()
p3<-ggplot(model, aes(.fitted, sqrt(abs(.stdresid))))+geom_point(na.rm=TRUE)
p3<-p3+stat_smooth(method="loess", na.rm = TRUE)+xlab("Fitted Value")
p3<-p3+ylab(expression(sqrt("|Standardized residuals|")))
p3<-p3+ggtitle("Scale-Location")+theme_bw()
p4<-ggplot(model, aes(seq_along(.cooksd), .cooksd))+geom_bar(stat="identity", position="identity")
p4<-p4+xlab("Obs. Number")+ylab("Cook's distance")
p4<-p4+ggtitle("Cook's distance")+theme_bw()
p5<-ggplot(model, aes(.hat, .stdresid))+geom_point(aes(size=.cooksd), na.rm=TRUE)
p5<-p5+stat_smooth(method="loess", na.rm=TRUE)
p5<-p5+xlab("Leverage")+ylab("Standardized Residuals")
p5<-p5+ggtitle("Residual vs Leverage Plot")
p5<-p5+scale_size_continuous("Cook's Distance", range=c(1,5))
p5<-p5+theme_bw()+theme(legend.position="bottom")
p6<-ggplot(model, aes(.hat, .cooksd))+geom_point(na.rm=TRUE)+stat_smooth(method="loess", na.rm=TRUE)
p6<-p6+xlab("Leverage hii")+ylab("Cook's Distance")
p6<-p6+ggtitle("Cook's dist vs Leverage hii/(1-hii)")
p6<-p6+geom_abline(slope=seq(0,3,0.5), color="gray", linetype="dashed")
p6<-p6+theme_bw()
return(list(rvfPlot=p1, qqPlot=p2, sclLocPlot=p3, cdPlot=p4, rvlevPlot=p5, cvlPlot=p6))
}
diagPlts<-diagPlot(lm3)
lm3 <- lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + artisnalOpp + biodiversity + foodProv + natProducts, data = df)
require(ggplot2)
diagPlot<-function(model, lineCol, graphCol){
p1<-ggplot(model, aes(.fitted, .resid))+geom_point(col = graphCol)
p1<-p1+stat_smooth(method="loess")+geom_hline(yintercept=0, col=lineCol, linetype="dashed")
p1<-p1+xlab("Fitted values")+ylab("Residuals")
p1<-p1+ggtitle("Residual vs Fitted Plot")+theme_bw()
p2<-ggplot(model, aes(qqnorm(.stdresid)[[1]], .stdresid))+geom_point(na.rm = TRUE)
p2<-p2+geom_abline(aes(qqline(.stdresid)))+xlab("Theoretical Quantiles")+ylab("Standardized Residuals")
p2<-p2+ggtitle("Normal Q-Q")+theme_bw()
p3<-ggplot(model, aes(.fitted, sqrt(abs(.stdresid))))+geom_point(na.rm=TRUE)
p3<-p3+stat_smooth(method="loess", na.rm = TRUE)+xlab("Fitted Value")
p3<-p3+ylab(expression(sqrt("|Standardized residuals|")))
p3<-p3+ggtitle("Scale-Location")+theme_bw()
p4<-ggplot(model, aes(seq_along(.cooksd), .cooksd))+geom_bar(stat="identity", position="identity")
p4<-p4+xlab("Obs. Number")+ylab("Cook's distance")
p4<-p4+ggtitle("Cook's distance")+theme_bw()
p5<-ggplot(model, aes(.hat, .stdresid))+geom_point(aes(size=.cooksd), na.rm=TRUE)
p5<-p5+stat_smooth(method="loess", na.rm=TRUE)
p5<-p5+xlab("Leverage")+ylab("Standardized Residuals")
p5<-p5+ggtitle("Residual vs Leverage Plot")
p5<-p5+scale_size_continuous("Cook's Distance", range=c(1,5))
p5<-p5+theme_bw()+theme(legend.position="bottom")
p6<-ggplot(model, aes(.hat, .cooksd))+geom_point(na.rm=TRUE)+stat_smooth(method="loess", na.rm=TRUE)
p6<-p6+xlab("Leverage hii")+ylab("Cook's Distance")
p6<-p6+ggtitle("Cook's dist vs Leverage hii/(1-hii)")
p6<-p6+geom_abline(slope=seq(0,3,0.5), color="gray", linetype="dashed")
p6<-p6+theme_bw()
return(list(rvfPlot=p1, qqPlot=p2, sclLocPlot=p3, cdPlot=p4, rvlevPlot=p5, cvlPlot=p6))
}
diagPlts<-diagPlot(lm3, colours$linecol, colours$graphcol)
do.call(grid.arrange, c(diagPlts, main="Diagnostic Plots", ncol=3))
diagPlts
lm3 <- lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + artisnalOpp + biodiversity + foodProv + natProducts, data = df)
require(ggplot2)
diagPlot<-function(model, lineCol, graphCol){
p1<-ggplot(model, aes(.fitted, .resid))+geom_point(col = graphCol)
p1<-p1+stat_smooth(method="loess")+geom_hline(yintercept=0, col=lineCol, linetype="dashed")
p1<-p1+xlab("Fitted values")+ylab("Residuals")
p1<-p1+ggtitle("Residual vs Fitted Plot")+theme_bw()
p2<-ggplot(model, aes(qqnorm(.stdresid)[[1]], .stdresid), graphCol)+geom_point(na.rm = TRUE)
p2<-p2+geom_abline(aes(qqline(.stdresid)), lineCol)+xlab("Theoretical Quantiles")+ylab("Standardized Residuals")
p2<-p2+ggtitle("Normal Q-Q")+theme_bw()
p3<-ggplot(model, aes(.fitted, sqrt(abs(.stdresid))))+geom_point(na.rm=TRUE)
p3<-p3+stat_smooth(method="loess", na.rm = TRUE)+xlab("Fitted Value")
p3<-p3+ylab(expression(sqrt("|Standardized residuals|")))
p3<-p3+ggtitle("Scale-Location")+theme_bw()
p4<-ggplot(model, aes(seq_along(.cooksd), .cooksd))+geom_bar(stat="identity", position="identity")
p4<-p4+xlab("Obs. Number")+ylab("Cook's distance")
p4<-p4+ggtitle("Cook's distance")+theme_bw()
p5<-ggplot(model, aes(.hat, .stdresid))+geom_point(aes(size=.cooksd), na.rm=TRUE)
p5<-p5+stat_smooth(method="loess", na.rm=TRUE)
p5<-p5+xlab("Leverage")+ylab("Standardized Residuals")
p5<-p5+ggtitle("Residual vs Leverage Plot")
p5<-p5+scale_size_continuous("Cook's Distance", range=c(1,5))
p5<-p5+theme_bw()+theme(legend.position="bottom")
p6<-ggplot(model, aes(.hat, .cooksd))+geom_point(na.rm=TRUE)+stat_smooth(method="loess", na.rm=TRUE)
p6<-p6+xlab("Leverage hii")+ylab("Cook's Distance")
p6<-p6+ggtitle("Cook's dist vs Leverage hii/(1-hii)")
p6<-p6+geom_abline(slope=seq(0,3,0.5), color="gray", linetype="dashed")
p6<-p6+theme_bw()
return(list(rvfPlot=p1, qqPlot=p2, sclLocPlot=p3, cdPlot=p4, rvlevPlot=p5, cvlPlot=p6))
}
diagPlts<-diagPlot(lm3, colours$linecol, colours$graphcol)
p2<-p2+geom_abline(aes(qqline(.stdresid)), col = lineCol)+xlab("Theoretical Quantiles")+ylab("Standardized Residuals")
lm3 <- lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + artisnalOpp + biodiversity + foodProv + natProducts, data = df)
require(ggplot2)
diagPlot<-function(model, lineCol, graphCol){
p1<-ggplot(model, aes(.fitted, .resid))+geom_point(col = graphCol)
p1<-p1+stat_smooth(method="loess")+geom_hline(yintercept=0, col=lineCol, linetype="dashed")
p1<-p1+xlab("Fitted values")+ylab("Residuals")
p1<-p1+ggtitle("Residual vs Fitted Plot")+theme_bw()
p2<-ggplot(model, aes(qqnorm(.stdresid)[[1]], .stdresid), col = graphCol)+geom_point(na.rm = TRUE)
p2<-p2+geom_abline(aes(qqline(.stdresid)), col = lineCol)+xlab("Theoretical Quantiles")+ylab("Standardized Residuals")
p2<-p2+ggtitle("Normal Q-Q")+theme_bw()
p3<-ggplot(model, aes(.fitted, sqrt(abs(.stdresid))))+geom_point(na.rm=TRUE)
p3<-p3+stat_smooth(method="loess", na.rm = TRUE)+xlab("Fitted Value")
p3<-p3+ylab(expression(sqrt("|Standardized residuals|")))
p3<-p3+ggtitle("Scale-Location")+theme_bw()
p4<-ggplot(model, aes(seq_along(.cooksd), .cooksd))+geom_bar(stat="identity", position="identity")
p4<-p4+xlab("Obs. Number")+ylab("Cook's distance")
p4<-p4+ggtitle("Cook's distance")+theme_bw()
p5<-ggplot(model, aes(.hat, .stdresid))+geom_point(aes(size=.cooksd), na.rm=TRUE)
p5<-p5+stat_smooth(method="loess", na.rm=TRUE)
p5<-p5+xlab("Leverage")+ylab("Standardized Residuals")
p5<-p5+ggtitle("Residual vs Leverage Plot")
p5<-p5+scale_size_continuous("Cook's Distance", range=c(1,5))
p5<-p5+theme_bw()+theme(legend.position="bottom")
p6<-ggplot(model, aes(.hat, .cooksd))+geom_point(na.rm=TRUE)+stat_smooth(method="loess", na.rm=TRUE)
p6<-p6+xlab("Leverage hii")+ylab("Cook's Distance")
p6<-p6+ggtitle("Cook's dist vs Leverage hii/(1-hii)")
p6<-p6+geom_abline(slope=seq(0,3,0.5), color="gray", linetype="dashed")
p6<-p6+theme_bw()
return(list(rvfPlot=p1, qqPlot=p2, sclLocPlot=p3, cdPlot=p4, rvlevPlot=p5, cvlPlot=p6))
}
diagPlts<-diagPlot(lm3, colours$linecol, colours$graphcol)
do.call(grid.arrange, c(diagPlts, main="Diagnostic Plots", ncol=3))
diagPlts
lm3 <- lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + artisnalOpp + biodiversity + foodProv + natProducts, data = df)
require(ggplot2)
diagPlot<-function(model, lineCol, graphCol){
p1<-ggplot(model, aes(.fitted, .resid))+geom_point(col = graphCol)
p1<-p1+stat_smooth(method="loess")+geom_hline(yintercept=0, col=lineCol, linetype="dashed")
p1<-p1+xlab("Fitted values")+ylab("Residuals")
p1<-p1+ggtitle("Residual vs Fitted Plot")+theme_bw()
p2<-ggplot(model, aes(qqnorm(.stdresid)[[1]], .stdresid), col = graphCol)+geom_point(na.rm = TRUE)
p2<-p2+geom_abline(aes(qqline(.stdresid)))+xlab("Theoretical Quantiles")+ylab("Standardized Residuals")
p2<-p2+ggtitle("Normal Q-Q")+theme_bw()
p3<-ggplot(model, aes(.fitted, sqrt(abs(.stdresid))))+geom_point(na.rm=TRUE)
p3<-p3+stat_smooth(method="loess", na.rm = TRUE)+xlab("Fitted Value")
p3<-p3+ylab(expression(sqrt("|Standardized residuals|")))
p3<-p3+ggtitle("Scale-Location")+theme_bw()
p4<-ggplot(model, aes(seq_along(.cooksd), .cooksd))+geom_bar(stat="identity", position="identity")
p4<-p4+xlab("Obs. Number")+ylab("Cook's distance")
p4<-p4+ggtitle("Cook's distance")+theme_bw()
p5<-ggplot(model, aes(.hat, .stdresid))+geom_point(aes(size=.cooksd), na.rm=TRUE)
p5<-p5+stat_smooth(method="loess", na.rm=TRUE)
p5<-p5+xlab("Leverage")+ylab("Standardized Residuals")
p5<-p5+ggtitle("Residual vs Leverage Plot")
p5<-p5+scale_size_continuous("Cook's Distance", range=c(1,5))
p5<-p5+theme_bw()+theme(legend.position="bottom")
p6<-ggplot(model, aes(.hat, .cooksd))+geom_point(na.rm=TRUE)+stat_smooth(method="loess", na.rm=TRUE)
p6<-p6+xlab("Leverage hii")+ylab("Cook's Distance")
p6<-p6+ggtitle("Cook's dist vs Leverage hii/(1-hii)")
p6<-p6+geom_abline(slope=seq(0,3,0.5), color="gray", linetype="dashed")
p6<-p6+theme_bw()
return(list(rvfPlot=p1, qqPlot=p2, sclLocPlot=p3, cdPlot=p4, rvlevPlot=p5, cvlPlot=p6))
}
diagPlts<-diagPlot(lm3, colours$linecol, colours$graphcol)
do.call(grid.arrange, c(diagPlts, main="Diagnostic Plots", ncol=3))
diagPlts
plot(lm3)
par(mfrow = c(2, 2))
plot(lm3)
lm3 <- lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + artisnalOpp + biodiversity + foodProv + natProducts, data = df)#
par(mfrow = c(2, 2), oma = c(0, 0, 2, 0))
plot(lm3)
lm3 <- lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + artisnalOpp + biodiversity + foodProv + natProducts, data = df)#
par(mfrow = c(2, 2))
plot(lm3)
ggplot(data = df, aes(x = index, y = happinessScore, col = region)) +
geom_point() +
stat_smooth(method = "lm", aes(col = region), alpha = 0.15) +
xlab("Ocean Health Index") +
ylab("Happiness Score") +
ggtitle("Relationship between happiness scores and the ocean health index")
lm3 <- lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + artisnalOpp + biodiversity + foodProv + natProducts, data = df)
lm3 <- lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + artisnalOpp + biodiversity + foodProv + natProducts, data = df)
ggplot(data = df, aes(x = index, y = happinessScore, col = region)) +
geom_point() +
stat_smooth(method = "lm", aes(col = region), alpha = 0.15) +
xlab("Ocean Health Index") +
ylab("Happiness Score") +
ggtitle("Relationship between happiness scores and the ocean health index")
summary(lmer1)
lmer1 <- lmer(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + artisnalOpp + biodiversity + foodProv + natProducts + (1|region), data = df)
summary(lmer1)
lmer2 <- lmer(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + artisnalOpp + biodiversity + foodProv + (1|region), data = df)
summary(lmer2)
lmer3 <- lmer(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + artisnalOpp + foodProv + (1|region), data = df)
summary(lmer3)
summary(lmer4)
lmer4 <- lmer(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + artisnalOpp + foodProv + (1|region), data = df)
summary(lmer4)
lmer4 <- lmer(happinessScore ~ senseOfPlace + cleanWater + artisnalOpp + foodProv + (1|region), data = df)
summary(lmer4)
lmer4vc <- VarCorr(lmer4)
print(lmer4vc, comp = "Variance")
lmerdiag <- data.frame(Residuals = resid(lmer4),
region = df$region,
Fitted = fitted(lmer4))
ggplot(data = lmerdiag, aes(x = Fitted, y = Residuals, col = region)) +
geom_point() +
facet_wrap(~region) +
ggtitle("Lowest level residuals facetting by region")
lmerdiag <- data.frame(Residuals = resid(lmer4),
region = df$region,
Fitted = fitted(lmer4))
ggplot(data = lmerdiag, aes(x = Fitted, y = Residuals, col = region)) +
geom_point() +
facet_wrap(~region) +
ggtitle("Lowest level residuals facetting by region")
lmer4 <- lmer(happinessScore ~ senseOfPlace + cleanWater + artisnalOpp + foodProv + (1|region), data = df)
summary(lmer4)
lmerdiag <- data.frame(Residuals = resid(lmer4),
region = df$region,
Fitted = fitted(lmer4))
ggplot(data = lmerdiag, aes(x = Fitted, y = Residuals, col = region)) +
geom_point() +
facet_wrap(~region) +
ggtitle("Lowest level residuals facetting by region")
plot_model(lmer4, type = "re")
lmer4 <- lmer(happinessScore ~ senseOfPlace + cleanWater + artisnalOpp + foodProv + (1|region), data = df)
summary(lmer4)
lm4 <- lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + foodProv, data = df)
lmerdiag <- data.frame(Residuals = resid(lmer4),
region = df$region,
Fitted = fitted(lmer4))
lmdiag <- data.frame(Residuals = resid(lm4),
region = df$region,
Fitted = fitted(lm4))
ggplot() +
geom_point(data = lmerdiag, aes(x = Fitted, y = Residuals, col = region)) +
geom_point(data = lmdiag, aes(x = Fitted, y = Residuals, col = region)) +
facet_wrap(~region) +
ggtitle("Lowest level residuals facetting by region")
lmer4 <- lmer(happinessScore ~ senseOfPlace + cleanWater + artisnalOpp + foodProv + (1|region), data = df)
summary(lmer4)
lm4 <- lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + foodProv, data = df)
lmerdiag <- data.frame(Residuals = resid(lmer4),
region = df$region,
Fitted = fitted(lmer4))
lmdiag <- data.frame(Residuals = resid(lm4),
region = df$region,
Fitted = fitted(lm4))
ggplot() +
geom_point(data = lmerdiag, aes(x = Fitted, y = Residuals, col = "green")) +
geom_point(data = lmdiag, aes(x = Fitted, y = Residuals, col = "red")) +
facet_wrap(~region) +
ggtitle("Lowest level residuals facetting by region")
lmer4 <- lmer(happinessScore ~ senseOfPlace + cleanWater + artisnalOpp + foodProv + (1|region), data = df)
summary(lmer4)
lm4 <- lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + foodProv, data = df)
lmerdiag <- data.frame(Residuals = resid(lmer4),
region = df$region,
Fitted = fitted(lmer4))
lmdiag <- data.frame(Residuals = resid(lm4),
region = df$region,
Fitted = fitted(lm4))
ggplot() +
geom_point(data = lmerdiag, aes(x = Fitted, y = Residuals, col = "red")) +
geom_point(data = lmdiag, aes(x = Fitted, y = Residuals, col = "green")) +
facet_wrap(~region) +
ggtitle("Lowest level residuals facetting by region")
lmer4 <- lmer(happinessScore ~ senseOfPlace + cleanWater + artisnalOpp + foodProv + (1|region), data = df)
summary(lmer4)
lm4 <- lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + foodProv, data = df)
lmerdiag <- data.frame(Residuals = resid(lmer4),
region = df$region,
Fitted = fitted(lmer4))
lmdiag <- data.frame(Residuals = resid(lm4),
region = df$region,
Fitted = fitted(lm4))
ggplot() +
geom_point(data = lmerdiag, aes(x = Fitted, y = Residuals, col = "lmer")) +
geom_point(data = lmdiag, aes(x = Fitted, y = Residuals, col = "lm")) +
facet_wrap(~region) +
ggtitle("Lowest level residuals facetting by region")
lmer4 <- lmer(happinessScore ~ senseOfPlace + cleanWater + artisnalOpp + foodProv + (1|region), data = df)
summary(lmer4)
lm4 <- lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + foodProv, data = df)
lmerdiag <- data.frame(Residuals = resid(lmer4),
region = df$region,
Fitted = fitted(lmer4))
lmdiag <- data.frame(Residuals = resid(lm4),
region = df$region,
Fitted = fitted(lm4))
ggplot() +
geom_point(data = lmerdiag, aes(x = Fitted, y = Residuals, col = "Random Effects model")) +
geom_point(data = lmdiag, aes(x = Fitted, y = Residuals, col = "Fixed Effects model")) +
facet_wrap(~region) +
ggtitle("Lowest level residuals facetting by region")
lm3 <- lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + artisnalOpp + biodiversity + foodProv + natProducts, data = df)
ggplot(data = df, aes(x = index, y = happinessScore, col = region)) +
geom_point() +
stat_smooth(method = "lm", aes(col = region), alpha = 0.15) +
xlab("Ocean Health Index") +
ylab("Happiness Score") +
ggtitle("Relationship between happiness scores and the ocean health index")
lmer4 <- lmer(happinessScore ~ senseOfPlace + cleanWater + artisnalOpp + foodProv + (1|region), data = df)
lm4 <- lm(happinessScore ~ senseOfPlace + cleanWater + tourismAndRec + foodProv, data = df)
lmerdiag <- data.frame(Residuals = resid(lmer4),
region = df$region,
Fitted = fitted(lmer4))
lmdiag <- data.frame(Residuals = resid(lm4),
region = df$region,
Fitted = fitted(lm4))
ggplot() +
geom_point(data = lmerdiag, aes(x = Fitted, y = Residuals, col = "Random Effects model", alpha = 0.5)) +
geom_point(data = lmdiag, aes(x = Fitted, y = Residuals, col = "Fixed Effects model", alpha = 0.5)) +
facet_wrap(~region) +
ggtitle("Lowest level residuals facetting by region")
